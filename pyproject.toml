[tool.poetry]
name = "aloud"
version = "0.1.0"
description = ""
authors = ["Gilad Barnea <giladbrn@gmail.com>"]
readme = "README.md"
# Poetry version: 1.6



[tool.poetry.dependencies]
python = "^3.11"
langchain = "^0.0.337"
beautifulsoup4 = "^4.12.2"
wikipedia = "^1.4.0"
fake-useragent = "^1.1.3"
unstructured = "^0.7.12"
openai = "^1.3.3"
python-dotenv = "^1.0.0"
html2text = "^2020.1.16"
plum-dispatch = "^2.2.2"
typer = "^0.9.0"
langchainhub = "^0.1.14"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^23.3.0"}
isort = "^5.12.0"
pytest = "^7.4.0"
ipython = "^8.14.0"
jupyter = "^1.0.0"
rich = "^13.4.2"
pdbpp = "^0.10.3"
poethepoet = "^0.24.4"
langsmith = "^0.0.66"
ruff = "^0.1.6"
pytest-clarity = "^1.0.1"
pytest-datadir = "^1.5.0"

[tool.poetry.scripts]
aloud = 'aloud.main:main'


[tool.black]
line-length = 120
skip-magic-trailing-comma = true
preview = true

[tool.isort]
profile = "black"

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
test = { cmd = "pytest", env = { COLUMNS = "160" } }
lint = { shell = "ruff format . && isort . " }
lint-check = { shell = "ruff check --config=pyproject.toml . && isort . --check-only" }

[tool.pytest.ini_options]
python_files = ["tests/**/*.py"]
log_format = "[%(levelname)-5s %(asctime)s %(filename)s:%(lineno)d %(funcName)s()] %(message)s"
log_auto_indent = 2
addopts = """
    --color=yes
    --capture=no
    --code-highlight=yes
    --tb=short
    --doctest-modules
"""
filterwarnings = ["default:invalid escape sequence:DeprecationWarning"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"
builtins = ["live"]
output-format = "grouped"
ignore-init-module-imports = true
#show-source = true
exclude = ["./.ipython"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",       # Annotations
    "D",         # Docstrings
    "E501",      # Line too long
    "EM",        # Error messages: string formatting
    "ERA",       # Comments
#    "FBT001",
#    "FBT002",    # Boolean default positional argument in function definition
    "FIX002",    # To do found
    "N802",      # Function name should be lowercase
    "PERF401",   # Use a list comprehension to create a transformed list
    "PLR0913",   # Too many function arguments
    "PLR2004",   # Magic value comparison
    "Q",         # Quotes
    "RET504",    # Unnecessary assignment to a variable before return statement
    "RUF001",    # String contains ambiguous `â€™` (RIGHT SINGLE QUOTATION MARK)
    "RUF013",    # Implicit Optional
    "S101",      # Use of assert detected
    "S108",      # Probable insecure usage of temporary file or directory: "/tmp",
    "S311",      # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    "T100",      # Trace found: `breakpoint` used
    "T201",      # `print` found
    "TD002",     # Missing to do author
    "TD003",     # Missing to do link
    "TD006",     # Invalid to do capitalization
    "TRY003",    # Long exception messages outside of exception class
    "W293",      # Blank line contains whitespace
]

[tool.ruff.format]
# 5. Use single quotes for non-triple-quoted strings.
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",  # Unused import
]
"aloud/main.py" = [
    "F811",  # Refefined while unused
]



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
