[tool.poetry]
name = "aloud"
version = "0.1.0"
description = ""
authors = ["Gilad Barnea <giladbrn@gmail.com>"]
readme = "README.md"
# Poetry version: 1.6



[tool.poetry.dependencies]
python = "^3.11"
langchain = "^0.2.3"
beautifulsoup4 = "^4.12.2"
wikipedia = "^1.4.0"
fake-useragent = "^1.1.3"
unstructured = "^0.7.12"
openai = "^1.33.0"
python-dotenv = "^1.0.0"
html2text = "^2020.1.16"
plum-dispatch = "^2.4.1"
typer = "^0.9.0"
langchainhub = "^0.1.18"
ruamel-yaml = "^0.18.6"
pydantic = "^2.7.3"
langchain-openai = "^0.1.8"
beartype = "^0.18.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
ipython = "^8.14.0"
jupyter = "^1.0.0"
rich = "^13.4.2"
pdbr = "^0.8.8"
poethepoet = "^0.24.4"
ruff = "^0.4.9"
pytest-clarity = "^1.0.1"
pytest-datadir = "^1.5.0"
ipythonclipboard = "^1.0b2"
ipython-autoimport = "^0.4"
langsmith = "^0.1.76"
mypy = "^1.10.0"

[tool.poetry.scripts]
aloud = 'aloud.main:main'

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
test = { cmd = "pytest" }
lint = { shell = "ruff format .; ruff check --fix ." }
lint-check = { shell = "ruff check --show-fixes --show-source . ; ruff format --check --diff ." }
gen-model = { shell = "python scripts/generate_models.py" }

[tool.pytest.ini_options]
python_files = ["tests/**/*.py"]
log_format = "[%(levelname)-5s %(asctime)s %(name)s@%(filename)s:%(lineno)d %(funcName)s()] %(message)s"
log_auto_indent = 2

# --keep-duplicatse makes possible to have test dirs that don't start with test_
addopts = """
    --color=yes
    --capture=no
    --code-highlight=yes
    --tb=short
    --doctest-modules
    --keep-duplicates
"""
filterwarnings = ["default:invalid escape sequence:DeprecationWarning"]
python_classes = "Test* test_*"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"
builtins = ["live"]
output-format = "grouped"
#show-source = true

[tool.ruff.lint]
ignore-init-module-imports = true
select = ["ALL"]
ignore = [
    "ANN",       # Annotations
    "D",         # Docstrings
    "E501",      # Line too long
    "EM",        # Error messages: string formatting
    "ERA",       # Comments
#    "FBT001",    # Boolean type hint positional argument in function definition
#    "FBT002",    # Boolean default positional argument in function definition
    "FIX002",    # To do found
    "N802",      # Function name should be lowercase
    "PERF401",   # Use a list comprehension to create a transformed list
    "PLR0913",   # Too many function arguments
    "PLR2004",   # Magic value comparison
    "PT003",     # Checks for `pytest.fixture` calls with `scope="function"`.
    "PYI021",    # Docstrings should not be included in stubs
    "Q",         # Quotes
    "RET504",    # Unnecessary assignment to a variable before return statement
    "RUF001",    # String contains ambiguous `â€™` (RIGHT SINGLE QUOTATION MARK)
    "S101",      # Use of assert detected
    "S108",      # Probable insecure usage of temporary file or directory: "/tmp",
    "S311",      # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    "SIM108",    # If-else block instead of if expression
    "T100",      # Trace found: `breakpoint` used
    "T201",      # `print` found
    "TD002",     # Missing to do author
    "TD003",     # Missing to do link
    "TD006",     # Invalid to do capitalization
    "TRY003",    # Long exception messages outside of exception class
    "W293",      # Blank line contains whitespace
]

[tool.ruff.format]
# 5. Use single quotes for non-triple-quoted strings.
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",  # Unused import
]
"aloud/main.py" = [
    "F811",  # Refefined while unused
]
"aloud/__init__.py" = [
    "E402",  # Module level import not at top of file
]

[tool.mypy]
pretty = true
show_error_context = true
show_column_numbers = true
show_error_code_links = true
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

strict = true
# "strict" is equivalent to:
#check_untyped_defs = true
#disallow_any_generics = true
#disallow_incomplete_defs = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
#disallow_untyped_decorators = true
#disallow_untyped_defs = true
#extra_checks = true
#no_implicit_reexport = true
#strict_equality = true
#warn_redundant_casts = true
#warn_return_any = true
#warn_unused_configs = true
#warn_unused_ignores = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
